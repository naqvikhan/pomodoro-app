{"ast":null,"code":"var _jsxFileName = \"/Users/naqvi/Documents/GitHub/pomodoro-app/src/Timer.js\",\n  _s = $RefreshSig$();\nimport { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport PlayButton from \"./PlayButton\";\nimport PauseButton from \"./PauseButton\";\nimport SettingsButton from \"./SettingsButton\";\nimport { useContext, useState, useEffect, useRef } from \"react\";\nimport SettingsContext from \"./SettingsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Timer() {\n  _s();\n  const workColor = \"#ef583e\";\n  const breakColor = \"#9dbeb7\";\n  const workTrailColor = \"#EFD1BE\";\n  const breakTrailColor = \"#DADCCD\";\n  const settingsInfo = useContext(SettingsContext);\n  const [isPaused, setIsPaused] = useState(true);\n  const [mode, setMode] = useState(\"work\"); //work/break/null\n  const [secondsLeft, setSecondsLeft] = useState(0);\n  const secondsLeftRef = useRef(secondsLeft);\n  const isPausedRef = useRef(isPaused);\n  const modeRef = useRef(mode);\n  function tick() {\n    secondsLeftRef.current--;\n    setSecondsLeft(secondsLeftRef.current);\n  }\n  //   function initTimer() {\n  //     setSecondsLeft(settingsInfo.workMinutes * 60);\n  //   }\n\n  useEffect(() => {\n    // initTimer();\n\n    function switchMode() {\n      const nextMode = modeRef.current === \"work\" ? \"break\" : \"work\";\n      const nextSeconds = (nextMode === \"work\" ? settingsInfo.workMinutes : settingsInfo.breakMinutes) * 60;\n      setMode(nextMode);\n      modeRef.current = nextMode;\n      setSecondsLeft(nextSeconds);\n      secondsLeftRef.current = nextSeconds;\n    }\n    secondsLeftRef.current = settingsInfo.workMinutes * 60;\n    setSecondsLeft(secondsLeftRef.current);\n    const interval = setInterval(() => {\n      if (isPausedRef.current) {\n        return;\n      }\n      if (secondsLeftRef.current === 0) {\n        return switchMode();\n      }\n      tick();\n    }, 100);\n    return () => clearInterval(interval);\n  }, [settingsInfo]);\n  const totalSeconds = mode === \"work\" ? settingsInfo.workMinutes * 60 : settingsInfo.breakMinutes * 60;\n  const percentage = Math.round(secondsLeft / totalSeconds * 100);\n  const minutes = Math.floor(secondsLeft / 60);\n  let seconds = secondsLeft % 60;\n  if (seconds < 10) seconds = \"0\" + seconds;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      className: \"app-title topleft\",\n      children: \"Pomodoro.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n        strokeWidth: 7.5,\n        value: percentage,\n        text: minutes + \":\" + seconds,\n        styles: buildStyles({\n          rotation: 15,\n          strokeLinecap: 0,\n          textColor: mode === \"work\" ? workColor : breakColor,\n          pathColor: mode === \"work\" ? workColor : breakColor,\n          backgroundColor: \"#ffffff\",\n          trailColor: mode === \"work\" ? workTrailColor : breakTrailColor\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [isPaused ? /*#__PURE__*/_jsxDEV(PlayButton, {\n          onClick: () => {\n            setIsPaused(false);\n            isPausedRef.current = false;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(PauseButton, {\n          onClick: () => {\n            setIsPaused(true);\n            isPausedRef.current = true;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(SettingsButton, {\n          onClick: () => settingsInfo.setShowSettings(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Timer, \"qbDDvLhfSBzd+sXN+6DGwZsyaS4=\");\n_c = Timer;\nexport default Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["CircularProgressbar","buildStyles","PlayButton","PauseButton","SettingsButton","useContext","useState","useEffect","useRef","SettingsContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Timer","_s","workColor","breakColor","workTrailColor","breakTrailColor","settingsInfo","isPaused","setIsPaused","mode","setMode","secondsLeft","setSecondsLeft","secondsLeftRef","isPausedRef","modeRef","tick","current","switchMode","nextMode","nextSeconds","workMinutes","breakMinutes","interval","setInterval","clearInterval","totalSeconds","percentage","Math","round","minutes","floor","seconds","children","className","fileName","_jsxFileName","lineNumber","columnNumber","strokeWidth","value","text","styles","rotation","strokeLinecap","textColor","pathColor","backgroundColor","trailColor","style","marginTop","onClick","setShowSettings","_c","$RefreshReg$"],"sources":["/Users/naqvi/Documents/GitHub/pomodoro-app/src/Timer.js"],"sourcesContent":["import { CircularProgressbar, buildStyles } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport PlayButton from \"./PlayButton\";\nimport PauseButton from \"./PauseButton\";\nimport SettingsButton from \"./SettingsButton\";\nimport { useContext, useState, useEffect, useRef } from \"react\";\nimport SettingsContext from \"./SettingsContext\";\n\nfunction Timer() {\n  const workColor = \"#ef583e\";\n  const breakColor = \"#9dbeb7\";\n  const workTrailColor = \"#EFD1BE\";\n  const breakTrailColor = \"#DADCCD\";\n\n  const settingsInfo = useContext(SettingsContext);\n\n  const [isPaused, setIsPaused] = useState(true);\n  const [mode, setMode] = useState(\"work\"); //work/break/null\n  const [secondsLeft, setSecondsLeft] = useState(0);\n\n  const secondsLeftRef = useRef(secondsLeft);\n  const isPausedRef = useRef(isPaused);\n  const modeRef = useRef(mode);\n\n  function tick() {\n    secondsLeftRef.current--;\n    setSecondsLeft(secondsLeftRef.current);\n  }\n//   function initTimer() {\n//     setSecondsLeft(settingsInfo.workMinutes * 60);\n//   }\n\n  useEffect(() => {\n    // initTimer();\n\n    function switchMode() {\n      const nextMode = modeRef.current === \"work\" ? \"break\" : \"work\";\n      const nextSeconds =\n        (nextMode === \"work\"\n          ? settingsInfo.workMinutes\n          : settingsInfo.breakMinutes) * 60;\n\n      setMode(nextMode);\n      modeRef.current = nextMode;\n\n      setSecondsLeft(nextSeconds);\n      secondsLeftRef.current = nextSeconds;\n    }\n\n    secondsLeftRef.current = settingsInfo.workMinutes * 60;\n    setSecondsLeft(secondsLeftRef.current);\n\n    const interval = setInterval(() => {\n      if (isPausedRef.current) {\n        return;\n      }\n      if (secondsLeftRef.current === 0) {\n        return switchMode();\n      }\n\n      tick();\n    }, 100);\n\n    return () => clearInterval(interval);\n\n\n  },[settingsInfo]);\n\n  const totalSeconds =\n    mode === \"work\"\n      ? settingsInfo.workMinutes * 60\n      : settingsInfo.breakMinutes * 60;\n\n  const percentage = Math.round((secondsLeft / totalSeconds) * 100);\n\n  const minutes = Math.floor(secondsLeft / 60);\n  let seconds = secondsLeft % 60;\n  if (seconds < 10) seconds = \"0\" + seconds;\n\n  return (\n    <>\n      <text className=\"app-title topleft\">Pomodoro.</text>\n\n      <div>\n        <CircularProgressbar\n          strokeWidth={7.5}\n          value={percentage}\n          text={minutes + \":\" + seconds}\n          styles={buildStyles({\n            rotation: 15,\n            strokeLinecap: 0,\n            textColor: mode === \"work\" ? workColor : breakColor,\n            pathColor: mode === \"work\" ? workColor : breakColor,\n            backgroundColor: \"#ffffff\",\n            trailColor: mode === \"work\" ? workTrailColor : breakTrailColor,\n          })}\n        />\n\n        <div style={{ marginTop: \"20px\" }}>\n          {isPaused ? (\n            <PlayButton\n              onClick={() => {\n                setIsPaused(false);\n                isPausedRef.current = false;\n              }}\n            />\n          ) : (\n            <PauseButton\n              onClick={() => {\n                setIsPaused(true);\n                isPausedRef.current = true;\n              }}\n            />\n          )}\n\n          <SettingsButton onClick={() => settingsInfo.setShowSettings(true)} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Timer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}