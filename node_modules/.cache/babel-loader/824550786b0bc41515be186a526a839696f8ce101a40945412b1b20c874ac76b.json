{"ast":null,"code":"var _jsxFileName = \"/Users/naqvi/Documents/GitHub/pomodoro-app/src/Settings.js\",\n  _s = $RefreshSig$();\nimport ReactSlider from \"react-slider\";\nimport \"./Slider.css\";\nimport SettingsContext from \"./SettingsContext\";\nimport BackButton from \"./BackButton\";\nimport { useState, useEffect, useRef, useContext } from \"react\";\nimport DarkModeButton from \"./DarkModeButton\";\nimport LightModeButton from \"./LightModeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const settingsInfo = useContext(SettingsContext);\n  const light = \"#efe6d5\";\n  const dark = \"#253834\";\n  const [setDark, setToDarkMode] = useState(light);\n  const [setLight, setToLightMode] = useState(true);\n  const setLightRef = useRef(setToLightMode);\n  const click = setDark => {\n    setToDarkMode(setDark);\n  };\n  useEffect(() => {\n    document.body.style.backgroundColor = setDark;\n  }, [setDark]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: setLight ? /*#__PURE__*/_jsxDEV(DarkModeButton, {\n        onClick: () => {\n          click(dark);\n          setToLightMode(false);\n          setLightRef.current = false;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(LightModeButton, {\n        onClick: () => {\n          click(light);\n          setToLightMode(true);\n          setLightRef.current = true;\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"left\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"work\",\n        children: [\"Work: \", settingsInfo.workMinutes, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: \"sliderWork\",\n        thumbClassName: \"thumbWork\",\n        trackClassName: \"track\",\n        value: settingsInfo.workMinutes,\n        onChange: newValue => settingsInfo.setWorkMinutes(newValue),\n        min: 1,\n        max: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"break\",\n        children: [\"Break: \", settingsInfo.breakMinutes, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n        className: \"sliderBreak\",\n        thumbClassName: \"thumbBreak\",\n        trackClassName: \"track\",\n        value: settingsInfo.breakMinutes,\n        onChange: newValue => settingsInfo.setBreakMinutes(newValue),\n        min: 1,\n        max: 120\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\",\n          marginTop: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(BackButton, {\n          onClick: () => settingsInfo.setShowSettings(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Settings, \"TGK1XIJArCE2SRJucp4x2eTfbqM=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["ReactSlider","SettingsContext","BackButton","useState","useEffect","useRef","useContext","DarkModeButton","LightModeButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Settings","_s","settingsInfo","light","dark","setDark","setToDarkMode","setLight","setToLightMode","setLightRef","click","document","body","style","backgroundColor","children","onClick","current","fileName","_jsxFileName","lineNumber","columnNumber","textAlign","className","workMinutes","thumbClassName","trackClassName","value","onChange","newValue","setWorkMinutes","min","max","breakMinutes","setBreakMinutes","marginTop","setShowSettings","_c","$RefreshReg$"],"sources":["/Users/naqvi/Documents/GitHub/pomodoro-app/src/Settings.js"],"sourcesContent":["import ReactSlider from \"react-slider\";\nimport \"./Slider.css\";\nimport SettingsContext from \"./SettingsContext\";\nimport BackButton from \"./BackButton\";\nimport { useState, useEffect, useRef, useContext } from \"react\";\nimport DarkModeButton from \"./DarkModeButton\";\nimport LightModeButton from \"./LightModeButton\";\n\nfunction Settings() {\n  const settingsInfo = useContext(SettingsContext);\n\n\n  const light = \"#efe6d5\";\n  const dark = \"#253834\";\n  const [setDark, setToDarkMode] = useState(light)\n  \n  const [setLight, setToLightMode] = useState(true)\n\n  const setLightRef = useRef(setToLightMode);\n\n  const click = setDark => {\n    setToDarkMode(setDark)\n  }\n  \n\n  useEffect(() => {\n    document.body.style.backgroundColor = setDark\n  }, [setDark])\n\n  return (\n    <>\n    <div>\n      {setLight ? (\n      <DarkModeButton onClick = {() => {\n      click(dark);\n      setToLightMode(false);\n      setLightRef.current = false;}}\n      />\n      ) : (\n    < LightModeButton onClick = {() => {\n      click(light);\n      setToLightMode(true);\n      setLightRef.current = true;}}\n      />\n      )}\n      </div>\n\n    <div style={{ textAlign: \"left\" }}>\n      <h1 className=\"work\">Work: {settingsInfo.workMinutes}:00</h1>\n      <ReactSlider\n        className={\"sliderWork\"}\n        thumbClassName={\"thumbWork\"}\n        trackClassName={\"track\"}\n        value={settingsInfo.workMinutes}\n        onChange={(newValue) => settingsInfo.setWorkMinutes(newValue)}\n        min={1}\n        max={120}\n      />\n      <h1 className=\"break\">Break: {settingsInfo.breakMinutes}:00</h1>\n      <ReactSlider\n        className={\"sliderBreak\"}\n        thumbClassName={\"thumbBreak\"}\n        trackClassName={\"track\"}\n        value={settingsInfo.breakMinutes}\n        onChange={(newValue) => settingsInfo.setBreakMinutes(newValue)}\n        min={1}\n        max={120}\n      />\n      <div style={{ textAlign: \"center\", marginTop: \"20px\" }}>\n        <BackButton onClick={() => settingsInfo.setShowSettings(false)} />\n      </div>\n    </div>\n    </>\n  );\n}\nexport default Settings;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}